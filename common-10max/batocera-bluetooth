#!/bin/bash

. /etc/profile

ACTION=$1
shift

do_help() {
    echo "${1} list" >&2
    echo "${1} trust" >&2
    echo "${1} remove <device address>" >&2
}

do_list() {
    find /storage/.cache/bluetooth -type f -name info |
	while read FILE
	do
	    if grep -qE '^Trusted=true$' "${FILE}"
	    then
		DEVNAME=$(grep -E '^Name=' "${FILE}" | sed -e s+"^Name="++)
		DEVADDR=$(basename $(dirname "${FILE}"))
		echo "${DEVADDR} ${DEVNAME}"
	    fi
	done
}

do_remove() {
    DEV="${1}"
    # output is never nice
    if ! (echo "untrust ${DEV}" ; echo "remove ${DEV}") | /usr/bin/bluetoothctl >> /storage/bluetooth.log 2>&1
    then
	return 1
    fi
    return 0
}

# 定义检查bluetoothctl list输出的函数  
check_bluetooth() {  
    local count=0  
    local max_wait=10  # 最大等待秒数  
    local output  
  
    # 循环检查bluetoothctl list的输出  
    while [[ $count -lt $max_wait ]]; do  
        output=$(bluetoothctl list | grep -q Controller)  
        if [[ $? -eq 0 ]]; then  
            # 如果找到了Controller信息，则退出循环  
            echo "Bluetooth controller found."  
            return 0  
        fi  
        # 如果没有找到，则等待1秒并增加计数器  
        echo "Bluetooth controller not found. Waiting for $((max_wait-count)) more seconds..."  
        sleep 1  
        ((count++))  
    done  
  
    # 如果超过最大等待时间仍未找到，则打印错误消息  
    echo "Bluetooth controller not found after $max_wait seconds."  
    return 1  
}  

do_trust() {
    NPID=$(pgrep -f jelos-bluetooth)
    test ! -z "${NPID}" && return 0

	bluetoothctl show | grep Discovering | grep no
     if [[ $? -ne 0 ]]; then
	    systemctl restart hciattach-realtek
    fi

	check_bluetooth  
	if [[ $? -eq 0 ]]; then  
		echo "Bluetooth is ready now."  
	else  
		echo "Exiting the script due to Bluetooth issues." 
		exit 1  
	fi

    bluetoothctl list | grep -q Controller
    if [[ $? -ne 0 ]]; then
	    systemctl restart hciattach-realtek
    fi

	check_bluetooth  
	if [[ $? -eq 0 ]]; then  
		echo "Bluetooth is ready now."  
	else  
		echo "Exiting the script due to Bluetooth issues." 
		exit 1  
	fi
    systemctl stop bluetooth-agent.service
    jelos-bluetooth
    systemctl start bluetooth-agent.service
}

case "${ACTION}" in
    "list")
	do_list
	;;
    "trust")
	do_trust
	;;
    "remove")
    do_remove "${1}" || exit 1
	;;
    *)
	do_help "${0}"
	exit 1
esac

exit 0
